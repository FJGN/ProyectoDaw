
Tema:   LOGIN DE USUARIOS EN SYMFONY2
Problema:
    Inicio de sesión con usuarios en firewall de Symfony.
Solución:
    El problema se solucionó cambiando el tamaño del campo de la contraseña,
    ya que al codificarla, ocuparía más tamaño del que podía almacenarse y
    al comparar contraseñas, siempre daba error de credenciales.
    El tamaño del campo era de 50 caracteres teniendo sha512, con sha1
    validaba sin problemas.
    Se ha incrementado el campo de 50 a 88 caracteres que es justo lo que
    ocupa la contraseña codificada con sha512.
    

Tema:   CIERRE DE SESIÓN DE USUARIOS
Problema:
    Genera error al cerrar la sesión de un usuario.
Solución:
    Añadir parámetro a logout, tal que quedaría así:
    logout: 
        path: logout
        target: /
        invalidate_session: false
    Ayuda:
    http://ferdinandfly.blogspot.com.es/2013/06/symfony2-php-warning.html


Tema:   RELACIÓN MANY TO ONE
Problema:
    No genera bien la relación de Messages a Users
Solución:
    La relación entre estas dos tablas es ManyToOne, únicamente está presente
    en la entidad Messages, concretamente en dos campos: 'from_user' y 'to_user'.
    No hace falta que en la entidad Users haya un OneToMany, ya que la relación
    es unidireccional.
    Lo que se pasará en el método 'setFromUser' de la entidad Messages, será
    el objeto Users con un usuario determinado.
    Hacer un @JoinColum es opcional, ya que por defecto lo que grabará será el
    id del objeto Users.


Tema:   UNIQUE
Problema:
    Cómo hacer dos o más campos como unique a la vez
Solución:
    En la anotación @Table, hay un atributo llamado uniqueConstraints, en el que
    su valor contiene @UniqueConstraint(), y a su vez, contiene los atributos
    name (clave de index) y columns (columnas unique). Se pueden indicar más de
    un atributo columns para tener más campos como unique. En el ejemplo se
    muestra una entidad real que tiene como unique varios campos, y que además
    tiene otros dos campos como unique.
Ejemplo:
    @ORM\Table(
 	name="courses_groups_subjects", 
 	uniqueConstraints=
 		{@ORM\UniqueConstraint(
 		    name="cgs_idx", 
 		    columns={"group_id", "subject_id", "teacher_id"},
                    columns={"group_id", "subject_id"}
 		)}
    )



